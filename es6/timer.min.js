'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Timer = function () {
    _createClass(Timer, [{
        key: 'animationFrame',
        value: function animationFrame() {
            if (this.timer !== undefined) {
                if (this.repeatTracker > 0) {
                    var difference = new Date().getTime() - this.timer;
                    if (difference >= this.interval) {
                        this.timer = new Date().getTime() - (difference - this.interval);
                        this.repeatTracker--;
                        this.update();
                    }
                    window.requestAnimationFrame(function () {
                        this.animationFrame();
                    }.bind(this));
                } else {
                    this.complete();
                }
            }
        }
    }, {
        key: 'complete',
        value: function complete() {
            this.pause();
            try {
                $(this).trigger({ type: Timer.TIMER_COMPLETE, timer: this, timeRemaining: this.repeatTracker });
            } catch (error) {}
        }
    }]);

    function Timer(interval, repeat) {
        _classCallCheck(this, Timer);

        this.interval = interval;
        this.repeat = this.repeatTracker = repeat;
        this.timer;
    }

    _createClass(Timer, [{
        key: 'getCurrentCount',
        value: function getCurrentCount() {
            return this.repeat - this.repeatTracker;
        }
    }, {
        key: 'getInterval',
        value: function getInterval() {
            return this.interval;
        }
    }, {
        key: 'getRepeatCount',
        value: function getRepeatCount() {
            return this.repeat;
        }
    }, {
        key: 'getRunning',
        value: function getRunning() {
            return this.timer !== undefined;
        }
    }, {
        key: 'pause',
        value: function pause() {
            this.timer = undefined;
        }
    }, {
        key: 'reset',
        value: function reset() {
            this.repeatTracker = this.repeat;
            try {
                $(this).trigger({ type: Timer.TIMER_RESET, timer: this, timeRemaining: this.repeatTracker, running: this.getRunning() });
            } catch (error) {}
        }
    }, {
        key: 'start',
        value: function start() {
            if (this.timer === undefined) {
                this.timer = new Date().getTime();
                window.requestAnimationFrame(function () {
                    this.animationFrame();
                }.bind(this));
            }
        }
    }, {
        key: 'update',
        value: function update() {
            try {
                $(this).trigger({ type: Timer.TIMER, timer: this, timeRemaining: this.repeatTracker });
            } catch (error) {}
        }
    }]);

    return Timer;
}();

Timer.TIMER = 'timer';
Timer.TIMER_COMPLETE = 'timer-complete';
Timer.TIMER_RESET = 'timer-reset';
Timer.DISPATCH_ERROR = 'Not able to dispatch event, please make sure you are including jQuery in your project: %function%';
window.Timer = Timer;
